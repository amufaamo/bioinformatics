`rename` コマンドは、複数のファイル名を一括で変更する際に便利なLinuxコマンドである。ただし、システムによっては挙動の異なる2種類の `rename` コマンドが存在する点に注意が必要である。

1.  **Perlベースの `rename` (しばしば `prename` とも呼ばれる)**
    Perlの正規表現を用いた高度な置換が可能である。多くのLinuxディストリビューションで採用されている。

    * **基本的な書式:**
        ```bash
        rename [オプション] 's/旧パターン/新パターン/[修飾子]' 対象ファイル群
        ```
        * `'s/旧パターン/新パターン/[修飾子]'`: Perlの置換演算子。
            * `旧パターン`: 変更前のファイル名にマッチする正規表現。
            * `新パターン`: 変更後のファイル名を表す文字列。後方参照 (`$1`, `$2` など) を使用できる。
            * `修飾子`: `g` (グローバル置換)、`i` (大文字・小文字を区別しない) など。
        * `対象ファイル群`: ワイルドカード (`*`, `?` など) を使って複数のファイルを指定する。

    * **主なオプション:**
        * `-v` (`--verbose`): 変更されたファイル名と、どのように変更されたかを表示する。
        * `-n` (`--no-act`, `--just-print`): 実際にはファイル名を変更せず、どのように変更されるかを表示する (ドライラン)。
        * `-f` (`--force`): 同名のファイルが存在する場合でも上書きを強制する。
        * `-e`: `'s/旧/新/'` の代わりに、より複雑なPerlの式を直接指定できる。

    * **使用例:**
        * 拡張子 `.txt` を `.md` に変更する:
            ```bash
            rename 's/\.txt$/.md/' *.txt
            ```
        * ファイル名の先頭に `backup_` を追加する:
            ```bash
            rename 's/^(.*)$/backup_$1/' *
            ```
        * ファイル名中のスペースをアンダースコアに置換する:
            ```bash
            rename 's/ /_/g' *
            ```
        * ファイル名をすべて小文字にする:
            ```bash
            rename 'y/A-Z/a-z/' *
            ```

2.  **util-linux パッケージの `rename`**
    よりシンプルな文字列置換を行うコマンドである。正規表現は使用できない。

    * **基本的な書式:**
        ```bash
        rename [オプション] 旧文字列 新文字列 対象ファイル群
        ```
        * `旧文字列`: 変更したいファイル名に含まれる文字列。
        * `新文字列`: `旧文字列` を置き換える新しい文字列。
        * `対象ファイル群`: ワイルドカード (`*`, `?` など) を使って複数のファイルを指定する。

    * **主なオプション:**
        * `-v` (`--verbose`): 処理されたファイル名を表示する。
        * `-s` (`--symlink`): シンボリックリンク自体をリネームする (デフォルトではリンク先をリネームしようとする)。
        * `-o` (`--no-overwrite`): 変更後のファイル名が既に存在する場合、上書きしない。

    * **使用例:**
        * ファイル名に含まれる `old_` を `new_` に置換する:
            ```bash
            rename old_ new_ *.jpg
            ```

**どちらの `rename` か確認する方法**

お使いのシステムにどちらの `rename` コマンドがインストールされているか不明な場合は、以下のコマンドで確認できることがある。

* `man rename`: マニュアルページを表示する。Perlベースのものは通常 `prename` や Perl の表現に関する記述が見られる。
* `rename --version`: バージョン情報を表示する。util-linux のものはその旨が表示されることが多い。

**注意点**

* `rename` コマンドは強力なため、特に正規表現を使用する場合は、意図しないファイルまで変更してしまう可能性がある。
* まずは `-n` (ドライラン) オプションを使って、どのような変更が行われるかを確認することを強く推奨する。
* 重要なファイルを操作する前には、バックアップを取っておくことが賢明である。

不明な点があれば、お使いのLinuxディストリビューション名と合わせて再度質問されたい。
